// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hcSC_
Rcpp::List hcSC_(const Rcpp::NumericMatrix& Y, const Rcpp::CharacterVector& nodeType, const Rcpp::LogicalMatrix& whiteList, const Rcpp::LogicalMatrix& blackList, double tol, unsigned int maxStep, unsigned int restart, unsigned int seed, bool verbose);
RcppExport SEXP _dagbagSC_hcSC_(SEXP YSEXP, SEXP nodeTypeSEXP, SEXP whiteListSEXP, SEXP blackListSEXP, SEXP tolSEXP, SEXP maxStepSEXP, SEXP restartSEXP, SEXP seedSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericMatrix& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector& >::type nodeType(nodeTypeSEXP);
    Rcpp::traits::input_parameter< const Rcpp::LogicalMatrix& >::type whiteList(whiteListSEXP);
    Rcpp::traits::input_parameter< const Rcpp::LogicalMatrix& >::type blackList(blackListSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type maxStep(maxStepSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type restart(restartSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(hcSC_(Y, nodeType, whiteList, blackList, tol, maxStep, restart, seed, verbose));
    return rcpp_result_gen;
END_RCPP
}



static const R_CallMethodDef CallEntries[] = {
    {"_dagbagSC_hcSC_", (DL_FUNC) &_dagbagSC_hcSC_, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_dagbagSC(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
